{"version":3,"sources":["components/Input.jsx","Styles/MessagesStyle.jsx","components/Message.jsx","components/Messages.jsx","Styles/ChatStyle.jsx","components/Login.jsx","routes.js","utils/consts.js","pages/Chat.jsx","pages/AppRouter.jsx","components/Navbar.jsx","App.jsx","index.jsx","utils/private.js"],"names":["Input","useContext","Context","auth","firestore","useAuthState","user","useState","inputValue","setInputValue","sendMessage","useCallback","a","reg","RegExp","test","length","collection","add","uid","displayName","photoURL","text","createDate","firebase","FieldValue","serverTimestamp","error","console","log","Grid","container","TextField","defaultValue","fullWidth","onKeyUp","e","keyCode","multiline","variant","style","width","value","onChange","target","Button","onClick","color","get","then","res","forEach","element","ref","delete","type","MessagesStyle","makeStyles","messagesArea","height","overflowY","inline","display","maxWidth","notmyMessage","wordWrap","backgroundColor","myMessage","flexDirection","Time","props","classes","time","Typography","component","className","itsMe","ListItemText","primary","Message","message","myId","Date","seconds","nanoseconds","toLocaleString","substring","ListItem","item","xs","align","Messages","useCollectionData","orderBy","messages","loading","useEffect","chat","document","getElementById","scrollTop","toBottom","justify","marginTop","id","border","CircularProgress","disableShrink","List","map","ChatStyle","table","minWidth","chatSection","headBG","borderRight500","borderRight","Login","login","provider","GoogleAuthProvider","signInWithPopup","publicRoutes","path","Component","privateRoutes","Container","AppRouter","routes","exact","to","Navbar","AppBar","position","Toolbar","signOut","App","basename","process","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","Provider"],"mappings":"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","file":"static/js/main.11098bfa.chunk.js","sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { Button, Grid, TextField } from '@material-ui/core';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { Context } from '..';\r\nimport firebase from 'firebase';\r\n\r\nconst Input = () => {\r\n\tconst { auth, firestore } = useContext(Context);\r\n\tconst [user] = useAuthState(auth);\r\n\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\tconst sendMessage = useCallback(async () => {\r\n\t\tconst reg = new RegExp('\\\\S');\r\n\t\tconst isJustSpace = !reg.test(inputValue);\r\n\t\tif (!isJustSpace && inputValue.length > 0) {\r\n\t\t\ttry {\r\n\t\t\t\tfirestore.collection('messages').add({\r\n\t\t\t\t\tuid: user.uid,\r\n\t\t\t\t\tdisplayName: user.displayName,\r\n\t\t\t\t\tphotoURL: user.photoURL,\r\n\t\t\t\t\ttext: inputValue,\r\n\t\t\t\t\tcreateDate: firebase.firestore.FieldValue.serverTimestamp()\r\n\t\t\t\t});\r\n\t\t\t\tsetInputValue('');\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [inputValue]);\r\n\r\n\tconst keyPress = e => {\r\n\t\tif (e.keyCode === 13) sendMessage();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container>\r\n\t\t\t<TextField\r\n\t\t\t\tdefaultValue=\"\"\r\n\t\t\t\tfullWidth\r\n\t\t\t\t// onKeyDown={keyPress}\r\n\t\t\t\tonKeyUp={keyPress}\r\n\t\t\t\tmultiline=\"true\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tstyle={{ width: '80%' }}\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={e => setInputValue(e.target.value)}\r\n\t\t\t></TextField>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={sendMessage}\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tfullWidth\r\n\t\t\t\tstyle={{ width: '10%' }}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t>\r\n\t\t\t\tSend\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tfirestore\r\n\t\t\t\t\t\t.collection('messages')\r\n\t\t\t\t\t\t.get()\r\n\t\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\t\tres.forEach(element => {\r\n\t\t\t\t\t\t\t\telement.ref.delete();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\tfullWidth\r\n\t\t\t\tstyle={{ width: '10%' }}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t>\r\n\t\t\t\tErase\r\n\t\t\t</Button>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst MessagesStyle = makeStyles({\r\n\tmessagesArea: {\r\n\t\theight: '50px',\r\n\t\toverflowY: 'none'\r\n\t},\r\n\tinline: {\r\n\t\tdisplay: 'inline',\r\n\t\tmaxWidth: '600px'\r\n\t\t// flexWrap: 'wrap-reverse'\r\n\t\t// flexDirection: 'column-reverse'\r\n\t},\r\n\tnotmyMessage: {\r\n\t\tmaxWidth: '600px',\r\n\t\twordWrap: 'break-word',\r\n\t\t'& *': {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tbackgroundColor: 'red'\r\n\t\t}\r\n\t},\r\n\tmyMessage: {\r\n\t\tmaxWidth: '600px',\r\n\t\twordWrap: 'break-word',\r\n\t\t'& *': {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'row-reverse',\r\n\t\t\tbackgroundColor: 'green'\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport default MessagesStyle;\r\n","import React from 'react';\r\nimport { Grid, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport MessagesStyle from '../Styles/MessagesStyle';\r\n\r\nexport const Time = props => {\r\n\tconst classes = MessagesStyle();\r\n\r\n\tconst { time } = props;\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\tmultiline=\"true\"\r\n\t\t\tcomponent=\"span\"\r\n\t\t\tvariant=\"body2\"\r\n\t\t\tclassName={classes.inline}\r\n\t\t\tcolor=\"textPrimary\"\r\n\t\t>\r\n\t\t\t{time}\r\n\t\t</Typography>\r\n\t);\r\n};\r\n\r\nexport const Context = props => {\r\n\tconst classes = MessagesStyle();\r\n\r\n\tconst { itsMe, text, time } = props;\r\n\treturn (\r\n\t\t<ListItemText\r\n\t\t\tclassName={itsMe ? classes.myMessage : classes.notmyMessage}\r\n\t\t\tprimary={\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Time time={time} />\r\n\t\t\t\t\t{text}\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t></ListItemText>\r\n\t);\r\n};\r\n\r\nconst Message = props => {\r\n\tconst classes = MessagesStyle();\r\n\r\n\tconst { message, myId } = props;\r\n\tconst time = new Date(\r\n\t\tmessage.createDate &&\r\n\t\t\tmessage.createDate.seconds * 1000 +\r\n\t\t\t\tmessage.createDate.nanoseconds / 1000000\r\n\t)\r\n\t\t.toLocaleString()\r\n\t\t.substring(12, 17);\r\n\tconst text = message.text;\r\n\tconst itsMe = myId === message.uid;\r\n\treturn (\r\n\t\t<ListItem key={message.createDate}>\r\n\t\t\t<Grid item xs={12} align={itsMe ? 'right' : 'left'}>\r\n\t\t\t\t<ListItemText\r\n\t\t\t\t\tclassName={itsMe ? classes.myMessage : classes.notmyMessage}\r\n\t\t\t\t\tprimary={<Context time={time} text={text} itsMe={itsMe} />}\r\n\t\t\t\t></ListItemText>\r\n\t\t\t</Grid>\r\n\t\t</ListItem>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { CircularProgress, Grid, List } from '@material-ui/core';\r\nimport Message from './Message';\r\nimport MessagesStyle from '../Styles/MessagesStyle';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { Context } from '..';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nconst Messages = () => {\r\n\tconst [value, setValue] = useState([\r\n\t\t{ text: '', createDate: { seconds: 1 } }\r\n\t]);\r\n\tconst classes = MessagesStyle();\r\n\tconst { auth, firestore } = useContext(Context);\r\n\tconst [user] = useAuthState(auth);\r\n\tlet [messages, loading] = useCollectionData(\r\n\t\tfirestore.collection('messages').orderBy('createDate')\r\n\t);\r\n\t// if (messages === undefined || messages.length == 0) {\r\n\t// \tmessages = [{ createDate: { seconds: 0 } }];\r\n\t// } else if (messages[messages.length - 1].createDate === null) {\r\n\t// \tmessages[messages.length - 1].createDate = { seconds: 0 };\r\n\t// }\r\n\tconsole.log('render Messages');\r\n\tconsole.log(messages[messages.length - 1]);\r\n\tconst toBottom = () => {\r\n\t\tconst chat = document.getElementById('chatsMessages');\r\n\t\tif (chat) chat.scrollTop = 9999999;\r\n\t};\r\n\t// if (\r\n\t// \t(messages[messages.length - 1].createDate.seconds != 0) &\r\n\t// \t(messages.length != value.length)\r\n\t// \t// &\r\n\t// \t// (messages[messages.length - 1].createDate.seconds !=\r\n\t// \t// \tvalue[value.length - 1].createDate.seconds) &\r\n\t// \t// (messages[messages.length - 1].text !== value[value.length - 1].text)\r\n\t// ) {\r\n\t// \t// console.log(messages[messages.length - 1].createDate.seconds);\r\n\t// \t// console.log(\r\n\t// \t// \tmessages[messages.length - 1].createDate.seconds !=\r\n\t// \t// \t\tvalue[value.length - 1].createDate.seconds,\r\n\t// \t// \tmessages[messages.length - 1].createDate.seconds,\r\n\t// \t// \tvalue[value.length - 1].createDate.seconds\r\n\t// \t// );\r\n\t// \t// console.log(\r\n\t// \t// \tmessages[messages.length - 1].text !== value[value.length - 1].text,\r\n\t// \t// \tmessages[messages.length - 1].text,\r\n\t// \t// \tvalue[value.length - 1].text\r\n\t// \t// );\r\n\t// \tconsole.log('if');\r\n\t// \t// setValue(messages);\r\n\t// \ttoBottom();\r\n\t// }\r\n\tuseEffect(() => {\r\n\t\t// if (\r\n\t\t// \tmessages != undefined &&\r\n\t\t// \tmessages[messages.length - 1].createDate.seconds !=\r\n\t\t// \t\tvalue[value.length - 1].createDate.seconds &&\r\n\t\t// \tmessages[messages.length - 1].text === value[value.length - 1].text\r\n\t\t// ) {\r\n\t\t// \tsetValue(messages);\r\n\t\t// }\r\n\t\t// messages == undefined && messages.push([{ nanoseconds: 1 }]);\r\n\t\tconsole.log('effect');\r\n\t\ttoBottom();\r\n\t}, [\r\n\t\tvalue[value.length - 1].createDate.seconds,\r\n\t\tvalue[value.length - 1].createDate.nanoseconds\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<Grid container justify={'center'} style={{ marginTop: 16 }}>\r\n\t\t\t<div\r\n\t\t\t\tid=\"chatsMessages\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: '60vh',\r\n\t\t\t\t\tborder: '1px solid gray',\r\n\t\t\t\t\toverflowY: 'auto'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{loading ? (\r\n\t\t\t\t\t<CircularProgress disableShrink />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<List className={classes.messagesArea}>\r\n\t\t\t\t\t\t{messages.map(message => (\r\n\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\tkey={\r\n\t\t\t\t\t\t\t\t\tmessage.createDate &&\r\n\t\t\t\t\t\t\t\t\tmessage.createDate.seconds +\r\n\t\t\t\t\t\t\t\t\t\t'' +\r\n\t\t\t\t\t\t\t\t\t\tmessage.createDate.nanoseconds\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tmyId={user.uid}\r\n\t\t\t\t\t\t\t\tmessage={message}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Messages;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst ChatStyle = makeStyles({\r\n\ttable: {\r\n\t\tminWidth: 650\r\n\t},\r\n\tchatSection: {\r\n\t\twidth: '100%',\r\n\t\theight: '80vh'\r\n\t},\r\n\theadBG: {\r\n\t\tbackgroundColor: '#e0e0e0'\r\n\t},\r\n\tborderRight500: {\r\n\t\tborderRight: '1px solid #e0e0e0'\r\n\t}\r\n});\r\n\r\nexport default ChatStyle;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport firebase from 'firebase';\r\n\r\nexport const Login = props => {\r\n\tconst auth = props.auth;\r\n\r\n\tconst login = async () => {\r\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\r\n\t\tconst { user } = await auth.signInWithPopup(provider);\r\n\t\tconsole.log(user);\r\n\t};\r\n\r\n\treturn (\r\n\t\t\t<Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={login}>\r\n\t\t\t\tLogin\r\n\t\t\t</Button>\r\n\t);\r\n};\r\n","import { Chat } from './pages/Chat';\r\nimport { Login } from './components/Login';\r\nimport { LOGIN_ROUTE, CHAT_ROUTE } from './utils/consts';\r\n\r\nexport const publicRoutes = [\r\n\t{\r\n\t\tpath: LOGIN_ROUTE,\r\n\t\tComponent: Login\r\n\t}\r\n];\r\n\r\nexport const privateRoutes = [\r\n\t{\r\n\t\tpath: CHAT_ROUTE,\r\n\t\tComponent: Chat\r\n\t}\r\n];\r\n","export const LOGIN_ROUTE = '/login';\r\nexport const CHAT_ROUTE = '/';\r\n","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Input from '../components/Input';\r\nimport Messages from '../components/Messages';\r\nimport ChatStyle from '../Styles/ChatStyle';\r\n\r\nexport const Chat = () => {\r\n\tChatStyle();\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Messages />\r\n\t\t\t<Input />\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { privateRoutes, publicRoutes } from '../routes';\r\nimport { Context } from '../index';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nconst AppRouter = () => {\r\n\tconst { auth } = useContext(Context);\r\n\tconst [user] = useAuthState(auth);\r\n\r\n\tconst routes = user\r\n\t\t? privateRoutes.map(({ path, Component }) => (\r\n\t\t\t\t<Route key={path} path={path} component={Component} exact={true} />\r\n\t\t  ))\r\n\t\t: publicRoutes.map(({ path, Component }) => (\r\n\t\t\t\t<Route key={path} path={path} component={Component} exact={true} />\r\n\t\t  ));\r\n\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t{routes}\r\n\t\t\t<Redirect to=\"/\" />\r\n\t\t</Switch>\r\n\t);\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useContext } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Context } from '../index';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { Login } from './Login';\r\n\r\nconst Navbar = () => {\r\n\tconst { auth } = useContext(Context);\r\n\tconst [user] = useAuthState(auth);\r\n\treturn (\r\n\t\t<AppBar color={'default'} position=\"static\">\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\">\r\n\t\t\t\t\t\tAnonym Chat\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{user ? (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tonClick={() => auth.signOut()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Login auth={auth} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n\r\n// {\r\n// \tuser ? (\r\n// \t\t<Button variant=\"outlined\" color=\"secondary\" onClick={() => auth.signOut()}>\r\n// \t\t\tLogout\r\n// \t\t</Button>\r\n// \t) : (\r\n// \t\t<NavLink to={LOGIN_ROUTE}>\r\n// \t\t\t<Button variant=\"outlined\" color=\"primary\">\r\n// \t\t\t\tLogin\r\n// \t\t\t</Button>\r\n// \t\t</NavLink>\r\n// \t);\r\n// }\r\n","import React, { useContext } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport AppRouter from './pages/AppRouter';\r\nimport Navbar from './components/Navbar';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t\t<Navbar />\r\n\t\t\t<AppRouter />\r\n\t\t</BrowserRouter>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React, { createContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport firebase from 'firebase';\r\nimport 'firebase/firebase';\r\nimport 'firebase/auth';\r\nimport { firebaseKEYS } from './utils/private';\r\n\r\nfirebase.initializeApp(firebaseKEYS);\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nexport const Context = createContext(null);\r\n\r\nReactDOM.render(\r\n\t<Context.Provider\r\n\t\tvalue={{\r\n\t\t\tfirebase,\r\n\t\t\tauth,\r\n\t\t\tfirestore\r\n\t\t}}\r\n\t>\r\n\t\t<App />\r\n\t</Context.Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n","export const firebaseKEYS = {\r\n\tapiKey: 'AIzaSyDSfl9oycjIQyv3VuXy9110ms4JTTGYJAE',\r\n\tauthDomain: 'chat-anonym-5555.firebaseapp.com',\r\n\tprojectId: 'chat-anonym-5555',\r\n\tstorageBucket: 'chat-anonym-5555.appspot.com',\r\n\tmessagingSenderId: '871012339222',\r\n\tappId: '1:871012339222:web:24186c163e2ae7e385af37',\r\n\tmeasurementId: 'G-976SGBJ2EZ'\r\n};\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/Chat.js","components/Login.js","routes.js","utils/consts.js","components/AppRouter.js","components/Navbar.js","App.jsx","index.jsx","utils/private.js"],"names":["useStyles","makeStyles","table","minWidth","chatSection","width","height","headBG","backgroundColor","borderRight500","borderRight","messageArea","overflowY","inline","display","maxWidth","notmyMessage","wordWrap","myMessage","flexDirection","Login","props","auth","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","user","console","log","className","Button","variant","color","type","onClick","publicRoutes","path","Component","privateRoutes","classes","useContext","Context","firestore","useAuthState","useState","value","setValue","useCollectionData","collection","orderBy","messages","loading","sendMessage","useCallback","reg","RegExp","test","length","add","uid","displayName","photoURL","text","createDate","FieldValue","serverTimestamp","error","useEffect","chat","document","getElementById","scrollTop","map","keyPress","e","keyCode","CircularProgress","disableShrink","Container","Grid","container","justify","style","marginTop","id","border","List","message","ListItem","item","xs","align","ListItemText","primary","Typography","multiline","component","Date","seconds","nanoseconds","toLocaleString","substring","TextField","fullWidth","onKeyDown","onKeyUp","onChange","target","AppRouter","routes","exact","to","Navbar","AppBar","position","Toolbar","signOut","App","basename","process","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","Provider"],"mappings":"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","file":"static/js/main.55b1d083.chunk.js","sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport {\r\n\tButton,\r\n\tContainer,\r\n\tGrid,\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n\tmakeStyles,\r\n\tTextField,\r\n\tTypography\r\n} from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { Context } from '..';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport firebase from 'firebase';\r\n\r\nconst useStyles = makeStyles({\r\n\ttable: {\r\n\t\tminWidth: 650\r\n\t},\r\n\tchatSection: {\r\n\t\twidth: '100%',\r\n\t\theight: '80vh'\r\n\t},\r\n\theadBG: {\r\n\t\tbackgroundColor: '#e0e0e0'\r\n\t},\r\n\tborderRight500: {\r\n\t\tborderRight: '1px solid #e0e0e0'\r\n\t},\r\n\tmessageArea: {\r\n\t\theight: '50px',\r\n\t\toverflowY: 'none'\r\n\t},\r\n\tinline: {\r\n\t\tdisplay: 'inline',\r\n\t\tmaxWidth: '600px'\r\n\t\t// flexWrap: 'wrap-reverse'\r\n\t\t// flexDirection: 'column-reverse'\r\n\t},\r\n\tnotmyMessage: {\r\n\t\tmaxWidth: '600px',\r\n\t\twordWrap: 'break-word',\r\n\t\t'& *': {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tbackgroundColor: 'red'\r\n\t\t}\r\n\t},\r\n\tmyMessage: {\r\n\t\tmaxWidth: '600px',\r\n\t\twordWrap: 'break-word',\r\n\t\t'& *': {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'row-reverse',\r\n\t\t\tbackgroundColor: 'green'\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport const Chat = () => {\r\n\tconst classes = useStyles();\r\n\tconst { auth, firestore } = useContext(Context);\r\n\tconst [user] = useAuthState(auth);\r\n\tconst [value, setValue] = useState('');\r\n\tconst [messages, loading] = useCollectionData(\r\n\t\tfirestore.collection('messages').orderBy('createDate')\r\n\t);\r\n\r\n\tconst sendMessage = useCallback(async () => {\r\n\t\tconst reg = new RegExp('\\\\S');\r\n\t\tconst isJustSpace = !reg.test(value);\r\n\t\tif (!isJustSpace && value.length > 0) {\r\n\t\t\ttry {\r\n\t\t\t\tfirestore.collection('messages').add({\r\n\t\t\t\t\tuid: user.uid,\r\n\t\t\t\t\tdisplayName: user.displayName,\r\n\t\t\t\t\tphotoURL: user.photoURL,\r\n\t\t\t\t\ttext: value,\r\n\t\t\t\t\tcreateDate: firebase.firestore.FieldValue.serverTimestamp()\r\n\t\t\t\t});\r\n\t\t\t\tsetValue('');\r\n\t\t\t}\r\n\t\t\tcatch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [value]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst chat = document.getElementById('chatsMessages');\r\n\t\tif (chat) chat.scrollTop = 9999999;\r\n\t\tconsole.log(messages);\r\n\t}, [messages]);\r\n\r\n\tconst map = {}; // You could also use an array\r\n\r\n\tconst keyPress = e => {\r\n\t\tmap[e.keyCode] = e.type == 'keydown';\r\n\t\tif (map[17] && map[13]) {\r\n\t\t\tsendMessage();\r\n\t\t}\r\n\t};\r\n\r\n\tif (loading) return <CircularProgress disableShrink />;\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Grid container justify={'center'} style={{ marginTop: 16 }}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tid=\"chatsMessages\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\theight: '60vh',\r\n\t\t\t\t\t\tborder: '1px solid gray',\r\n\t\t\t\t\t\toverflowY: 'auto',\r\n\t\t\t\t\t\tscrollTop: 999999\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<List className={classes.messageArea}>\r\n\t\t\t\t\t\t{messages[0] &&\r\n\t\t\t\t\t\t\tmessages.map(message => (\r\n\t\t\t\t\t\t\t\t<ListItem key={message.createDate}>\r\n\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\t\talign={user.uid === message.uid ? 'right' : 'left'}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\tuser.uid === message.uid\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? classes.myMessage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: classes.notmyMessage\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tprimary={\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.inline}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"textPrimary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{message.createDate &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew Date(message.createDate.seconds*1000+message.createDate.nanoseconds/1000000)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.toLocaleString()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.substring(12, 17)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{message.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t></ListItemText>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\t// direction=\"column\"\r\n\t\t\t\t// alignItems=\"flex-end\"\r\n\t\t\t\t// style={{ width: '80%' }}\r\n\t\t\t>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tonKeyDown={keyPress}\r\n\t\t\t\t\tonKeyUp={keyPress}\r\n\t\t\t\t\tmultiline\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tstyle={{ width: '90%' }}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={e => setValue(e.target.value)}\r\n\t\t\t\t></TextField>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={sendMessage}\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tstyle={{ width: '10%' }}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSend\r\n\t\t\t\t</Button>\r\n\t\t\t</Grid>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport firebase from 'firebase';\r\n\r\nexport const Login = props => {\r\n\tconst auth = props.auth;\r\n\r\n\tconst login = async () => {\r\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\r\n\t\tconst { user } = await auth.signInWithPopup(provider);\r\n\t\tconsole.log(user);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"\">\r\n\t\t\t<Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={login}>\r\n\t\t\t\tLogare\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Chat } from './components/Chat';\r\nimport { Login } from './components/Login';\r\nimport { LOGIN_ROUTE, CHAT_ROUTE } from './utils/consts';\r\n\r\nexport const publicRoutes = [\r\n\t{\r\n\t\tpath: LOGIN_ROUTE,\r\n\t\tComponent: Login\r\n\t}\r\n];\r\n\r\nexport const privateRoutes = [\r\n\t{\r\n\t\tpath: CHAT_ROUTE,\r\n\t\tComponent: Chat\r\n\t}\r\n];\r\n","export const LOGIN_ROUTE = '/login';\r\nexport const CHAT_ROUTE = '/';\r\n","import React, { useContext } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { privateRoutes, publicRoutes } from '../routes';\r\nimport { Context } from '../index';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nconst AppRouter = () => {\r\n\tconst { auth } = useContext(Context);\r\n\tconst [user] = useAuthState(auth);\r\n\r\n\tconst routes = user\r\n\t\t? privateRoutes.map(({ path, Component }) => (\r\n\t\t\t\t<Route key={path} path={path} component={Component} exact={true} />\r\n\t\t  ))\r\n\t\t: publicRoutes.map(({ path, Component }) => (\r\n\t\t\t\t<Route key={path} path={path} component={Component} exact={true} />\r\n\t\t  ));\r\n\tconsole.log(routes);\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t{routes}\r\n\t\t\t<Redirect to=\"/\" />\r\n\t\t</Switch>\r\n\t);\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useContext } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Context } from '../index';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { Login } from './Login';\r\n\r\nconst Navbar = () => {\r\n\tconst { auth } = useContext(Context);\r\n\tconst [user] = useAuthState(auth);\r\n\treturn (\r\n\t\t<AppBar color={'default'} position=\"static\">\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\">\r\n\t\t\t\t\t\tAnonym Chat\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{user ? (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tonClick={() => auth.signOut()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Login auth={auth} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n\r\n// {\r\n// \tuser ? (\r\n// \t\t<Button variant=\"outlined\" color=\"secondary\" onClick={() => auth.signOut()}>\r\n// \t\t\tLogout\r\n// \t\t</Button>\r\n// \t) : (\r\n// \t\t<NavLink to={LOGIN_ROUTE}>\r\n// \t\t\t<Button variant=\"outlined\" color=\"primary\">\r\n// \t\t\t\tLogin\r\n// \t\t\t</Button>\r\n// \t\t</NavLink>\r\n// \t);\r\n// }\r\n","import React, { useContext } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRouter from './components/AppRouter';\nimport Navbar from './components/Navbar';\nimport { Context } from './index';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction App() {\n\tconst { auth } = useContext(Context);\n\tconst [user, loading, error] = useAuthState(auth);\n\n\treturn (\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<Navbar />\n\t\t\t{loading ? <CircularProgress disableShrink /> : <AppRouter />}\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport firebase from 'firebase';\nimport 'firebase/firebase';\nimport 'firebase/auth';\nimport { firebaseKEYS } from './utils/private';\n\nfirebase.initializeApp(firebaseKEYS);\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nexport const Context = createContext(null);\n\nReactDOM.render(\n\t<Context.Provider\n\t\tvalue={{\n\t\t\tfirebase,\n\t\t\tauth,\n\t\t\tfirestore\n\t\t}}\n\t>\n\t\t<App />\n\t</Context.Provider>,\n\tdocument.getElementById('root')\n);\n","export const firebaseKEYS = {\r\n\tapiKey: 'AIzaSyDSfl9oycjIQyv3VuXy9110ms4JTTGYJAE',\r\n\tauthDomain: 'chat-anonym-5555.firebaseapp.com',\r\n\tprojectId: 'chat-anonym-5555',\r\n\tstorageBucket: 'chat-anonym-5555.appspot.com',\r\n\tmessagingSenderId: '871012339222',\r\n\tappId: '1:871012339222:web:24186c163e2ae7e385af37',\r\n\tmeasurementId: 'G-976SGBJ2EZ'\r\n};\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/Input.js","components/Message.js","components/Messages.js","pages/Chat.js","components/Login.js","routes.js","utils/consts.js","pages/AppRouter.js","components/Navbar.js","App.jsx","index.jsx","utils/private.js"],"names":["Input","props","value","setValue","sendMessage","keyPress","e","keyCode","Grid","container","TextField","defaultValue","fullWidth","onKeyDown","onKeyUp","multiline","variant","style","width","onChange","target","Button","onClick","useStyles","makeStyles","inline","display","maxWidth","notmyMessage","wordWrap","backgroundColor","myMessage","flexDirection","Time","classes","time","Typography","component","className","color","Context","itsMe","text","ListItemText","primary","Message","message","myId","Date","createDate","seconds","nanoseconds","toLocaleString","substring","uid","ListItem","item","xs","align","messageArea","height","overflowY","Messages","messages","justify","marginTop","id","border","List","map","table","minWidth","chatSection","headBG","borderRight500","borderRight","Login","auth","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","user","console","log","type","publicRoutes","path","Component","privateRoutes","useContext","firestore","useAuthState","useState","inputValue","setInputValue","getSeconds","useCollectionData","collection","orderBy","loading","useCallback","reg","RegExp","test","length","add","displayName","photoURL","FieldValue","serverTimestamp","error","useEffect","chat","document","getElementById","scrollTop","CircularProgress","disableShrink","Container","AppRouter","routes","exact","to","Navbar","AppBar","position","Toolbar","signOut","App","basename","process","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","Provider"],"mappings":"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","file":"static/js/main.2062dc28.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Grid, TextField } from '@material-ui/core';\r\n\r\nconst Input = props => {\r\n\tconst { value, setValue, sendMessage } = props;\r\n\tconst keyPress = e => {\r\n\t\tif (e.keyCode === 13) sendMessage();\r\n\t};\r\n\t// const keyMap = {};\r\n\t// const keyPress = e => {\r\n\t// \tkeyMap[e.keyCode] = e.type == 'keydown';\r\n\t// \tif (keyMap[17] && keyMap[13]) {\r\n\t//    // Ctrl + Enter\r\n\t// \t\tsendMessage();\r\n\t// \t}\r\n\t// };\r\n\treturn (\r\n\t\t<Grid container>\r\n\t\t\t<TextField\r\n\t\t\t\tdefaultValue=\"\"\r\n\t\t\t\tfullWidth\r\n\t\t\t\tonKeyDown={keyPress}\r\n\t\t\t\tonKeyUp={keyPress}\r\n\t\t\t\tmultiline\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tstyle={{ width: '90%' }}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={e => setValue(e.target.value)}\r\n\t\t\t></TextField>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={sendMessage}\r\n\t\t\t\tfullWidth\r\n\t\t\t\tstyle={{ width: '10%' }}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t>\r\n\t\t\t\tSend\r\n\t\t\t</Button>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport {\r\n\tmakeStyles,\r\n\tGrid,\r\n\tListItem,\r\n\tListItemText,\r\n\tTypography\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n\tinline: {\r\n\t\tdisplay: 'inline',\r\n\t\tmaxWidth: '600px'\r\n\t\t// flexWrap: 'wrap-reverse'\r\n\t\t// flexDirection: 'column-reverse'\r\n\t},\r\n\tnotmyMessage: {\r\n\t\tmaxWidth: '600px',\r\n\t\twordWrap: 'break-word',\r\n\t\t'& *': {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tbackgroundColor: 'red'\r\n\t\t}\r\n\t},\r\n\tmyMessage: {\r\n\t\tmaxWidth: '600px',\r\n\t\twordWrap: 'break-word',\r\n\t\t'& *': {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'row-reverse',\r\n\t\t\tbackgroundColor: 'green'\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport const Time = props => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst { time } = props;\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\tmultiline\r\n\t\t\tcomponent=\"span\"\r\n\t\t\tvariant=\"body2\"\r\n\t\t\tclassName={classes.inline}\r\n\t\t\tcolor=\"textPrimary\"\r\n\t\t>\r\n\t\t\t{time}\r\n\t\t</Typography>\r\n\t);\r\n};\r\n\r\nexport const Context = props => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst { itsMe, text, time } = props;\r\n\treturn (\r\n\t\t<ListItemText\r\n\t\t\tclassName={itsMe ? classes.myMessage : classes.notmyMessage}\r\n\t\t\tprimary={\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Time time={time} />\r\n\t\t\t\t\t{text}\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t></ListItemText>\r\n\t);\r\n};\r\n\r\nconst Message = props => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst { message, myId } = props;\r\n\tconst time = new Date(\r\n\t\tmessage.createDate &&\r\n\t\t\tmessage.createDate.seconds * 1000 +\r\n\t\t\t\tmessage.createDate.nanoseconds / 1000000\r\n\t)\r\n\t\t.toLocaleString()\r\n\t\t.substring(12, 17);\r\n\tconst text = message.text;\r\n\tconst itsMe = myId === message.uid;\r\n\treturn (\r\n\t\t<ListItem key={message.createDate}>\r\n\t\t\t<Grid item xs={12} align={itsMe ? 'right' : 'left'}>\r\n\t\t\t\t<ListItemText\r\n\t\t\t\t\tclassName={itsMe ? classes.myMessage : classes.notmyMessage}\r\n\t\t\t\t\tprimary={<Context time={time} text={text} itsMe={itsMe} />}\r\n\t\t\t\t></ListItemText>\r\n\t\t\t</Grid>\r\n\t\t</ListItem>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { makeStyles, Grid, List } from '@material-ui/core';\r\nimport Message from '../components/Message';\r\n\r\nconst useStyles = makeStyles({\r\n\tmessageArea: {\r\n\t\theight: '50px',\r\n\t\toverflowY: 'none'\r\n\t}\r\n});\r\nconst Messages = props => {\r\n\tconst classes = useStyles();\r\n\tconst { messages, uid } = props;\r\n\r\n\treturn (\r\n\t\t<Grid container justify={'center'} style={{ marginTop: 16 }}>\r\n\t\t\t<div\r\n\t\t\t\tid=\"chatsMessages\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: '60vh',\r\n\t\t\t\t\tborder: '1px solid gray',\r\n\t\t\t\t\toverflowY: 'auto'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<List className={classes.messageArea}>\r\n\t\t\t\t\t{messages[0] &&\r\n\t\t\t\t\t\tmessages.map(message => <Message myId={uid} message={message} />)}\r\n\t\t\t\t</List>\r\n\t\t\t</div>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { makeStyles, Container } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { Context } from '..';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport firebase from 'firebase';\r\nimport Input from '../components/Input';\r\nimport Messages from '../components/Messages';\r\n\r\nconst useStyles = makeStyles({\r\n\ttable: {\r\n\t\tminWidth: 650\r\n\t},\r\n\tchatSection: {\r\n\t\twidth: '100%',\r\n\t\theight: '80vh'\r\n\t},\r\n\theadBG: {\r\n\t\tbackgroundColor: '#e0e0e0'\r\n\t},\r\n\tborderRight500: {\r\n\t\tborderRight: '1px solid #e0e0e0'\r\n\t}\r\n});\r\n\r\nexport const Chat = () => {\r\n\tconst classes = useStyles();\r\n\tconst { auth, firestore } = useContext(Context);\r\n\tconst [user] = useAuthState(auth);\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst seconds = new Date().getSeconds();\r\n\tconst [messages, loading] = useCollectionData(\r\n\t\tfirestore.collection('messages').orderBy('createDate')\r\n\t);\r\n\r\n\tconst sendMessage = useCallback(async () => {\r\n\t\tconst reg = new RegExp('\\\\S');\r\n\t\tconst isJustSpace = !reg.test(inputValue);\r\n\t\tif (!isJustSpace && inputValue.length > 0) {\r\n\t\t\ttry {\r\n\t\t\t\tfirestore.collection('messages').add({\r\n\t\t\t\t\tuid: user.uid,\r\n\t\t\t\t\tdisplayName: user.displayName,\r\n\t\t\t\t\tphotoURL: user.photoURL,\r\n\t\t\t\t\ttext: inputValue,\r\n\t\t\t\t\tcreateDate: firebase.firestore.FieldValue.serverTimestamp()\r\n\t\t\t\t});\r\n\t\t\t\tsetInputValue('');\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [inputValue]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst chat = document.getElementById('chatsMessages');\r\n\t\tif (chat) chat.scrollTop = 9999999;\r\n\t}, [messages]);\r\n\r\n\tif (loading) return <CircularProgress disableShrink />;\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Messages uid={user.uid} messages={messages} />\r\n\t\t\t<Input\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tsetValue={setInputValue}\r\n\t\t\t\tsendMessage={sendMessage}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport firebase from 'firebase';\r\n\r\nexport const Login = props => {\r\n\tconst auth = props.auth;\r\n\r\n\tconst login = async () => {\r\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\r\n\t\tconst { user } = await auth.signInWithPopup(provider);\r\n\t\tconsole.log(user);\r\n\t};\r\n\r\n\treturn (\r\n\t\t\t<Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={login}>\r\n\t\t\t\tLogin\r\n\t\t\t</Button>\r\n\t);\r\n};\r\n","import { Chat } from './pages/Chat';\r\nimport { Login } from './components/Login';\r\nimport { LOGIN_ROUTE, CHAT_ROUTE } from './utils/consts';\r\n\r\nexport const publicRoutes = [\r\n\t{\r\n\t\tpath: LOGIN_ROUTE,\r\n\t\tComponent: Login\r\n\t}\r\n];\r\n\r\nexport const privateRoutes = [\r\n\t{\r\n\t\tpath: CHAT_ROUTE,\r\n\t\tComponent: Chat\r\n\t}\r\n];\r\n","export const LOGIN_ROUTE = '/login';\r\nexport const CHAT_ROUTE = '/';\r\n","import React, { useContext } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { privateRoutes, publicRoutes } from '../routes';\r\nimport { Context } from '../index';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nconst AppRouter = () => {\r\n\tconst { auth } = useContext(Context);\r\n\tconst [user] = useAuthState(auth);\r\n\r\n\tconst routes = user\r\n\t\t? privateRoutes.map(({ path, Component }) => (\r\n\t\t\t\t<Route key={path} path={path} component={Component} exact={true} />\r\n\t\t  ))\r\n\t\t: publicRoutes.map(({ path, Component }) => (\r\n\t\t\t\t<Route key={path} path={path} component={Component} exact={true} />\r\n\t\t  ));\r\n\tconsole.log(routes);\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t{routes}\r\n\t\t\t<Redirect to=\"/\" />\r\n\t\t</Switch>\r\n\t);\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useContext } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Context } from '../index';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { Login } from './Login';\r\n\r\nconst Navbar = () => {\r\n\tconst { auth } = useContext(Context);\r\n\tconst [user] = useAuthState(auth);\r\n\treturn (\r\n\t\t<AppBar color={'default'} position=\"static\">\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Grid container justify=\"space-between\">\r\n\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\">\r\n\t\t\t\t\t\tAnonym Chat\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{user ? (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tonClick={() => auth.signOut()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Login auth={auth} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n\r\n// {\r\n// \tuser ? (\r\n// \t\t<Button variant=\"outlined\" color=\"secondary\" onClick={() => auth.signOut()}>\r\n// \t\t\tLogout\r\n// \t\t</Button>\r\n// \t) : (\r\n// \t\t<NavLink to={LOGIN_ROUTE}>\r\n// \t\t\t<Button variant=\"outlined\" color=\"primary\">\r\n// \t\t\t\tLogin\r\n// \t\t\t</Button>\r\n// \t\t</NavLink>\r\n// \t);\r\n// }\r\n","import React, { useContext } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRouter from './pages/AppRouter';\nimport Navbar from './components/Navbar';\nimport { Context } from './index';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction App() {\n\tconst { auth } = useContext(Context);\n\tconst [user, loading, error] = useAuthState(auth);\n\n\treturn (\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<Navbar />\n\t\t\t{loading ? <CircularProgress disableShrink /> : <AppRouter />}\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport firebase from 'firebase';\nimport 'firebase/firebase';\nimport 'firebase/auth';\nimport { firebaseKEYS } from './utils/private';\n\nfirebase.initializeApp(firebaseKEYS);\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nexport const Context = createContext(null);\n\nReactDOM.render(\n\t<Context.Provider\n\t\tvalue={{\n\t\t\tfirebase,\n\t\t\tauth,\n\t\t\tfirestore\n\t\t}}\n\t>\n\t\t<App />\n\t</Context.Provider>,\n\tdocument.getElementById('root')\n);\n","export const firebaseKEYS = {\r\n\tapiKey: 'AIzaSyDSfl9oycjIQyv3VuXy9110ms4JTTGYJAE',\r\n\tauthDomain: 'chat-anonym-5555.firebaseapp.com',\r\n\tprojectId: 'chat-anonym-5555',\r\n\tstorageBucket: 'chat-anonym-5555.appspot.com',\r\n\tmessagingSenderId: '871012339222',\r\n\tappId: '1:871012339222:web:24186c163e2ae7e385af37',\r\n\tmeasurementId: 'G-976SGBJ2EZ'\r\n};\r\n"],"sourceRoot":""}